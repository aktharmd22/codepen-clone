{"version":3,"sources":["components/Editor.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","open","setOpen","useState","_jsxs","className","concat","children","_jsx","onClick","prevOpen","TransitEnterexitSharp","Launch","ControlledEditor","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useEffect","timeout","setTimeout","clearTimeout","_Fragment","title","sandbox","frameborder","width","height","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"yPA4CeA,MAnCCC,IACd,MAAM,SAAEC,EAAQ,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAaJ,GAC5CK,EAAMC,GAAWC,oBAAS,GAMjC,OACEC,eAAA,OAAKC,UAAS,oBAAAC,OAAsBL,EAAO,GAAK,aAAcM,SAAA,CAC5DH,eAAA,OAAKC,UAAU,eAAcE,SAAA,CAC1BT,EACDU,cAAA,UACEC,QAASA,IAAMP,GAASQ,IAAcA,IACtCL,UAAU,sBAAqBE,SAE9BN,EAAOO,cAACG,IAAqB,IAAMH,cAACI,IAAM,SAG/CJ,cAACK,aAAgB,CACfC,eAhBN,SAAsBC,EAAQC,EAAMjB,GAClCC,EAASD,EACX,EAeMA,MAAOA,EACPM,UAAU,sBACVY,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMvB,EACNwB,MAAO,WACPC,aAAa,OAGb,ECkBKC,MAvDHA,KACV,MAAOC,EAAMC,GAAWtB,mBAAS,KAC1BuB,EAAKC,GAAUxB,mBAAS,KACxByB,EAAIC,GAAS1B,mBAAS,KACtB2B,EAAQC,GAAa5B,mBAAS,IAerC,OAbA6B,qBAAU,KACR,MAAMC,EAAUC,YAAW,KACzBH,EAAU,uBAADzB,OAELkB,EAAI,sBAAAlB,OACHoB,EAAG,wBAAApB,OACFsB,EAAE,yBACH,GACJ,KACH,MAAO,KACLO,aAAaF,EAAQ,CACtB,GACA,CAACT,EAAME,EAAKE,IAEbxB,eAAAgC,WAAA,CAAA7B,SAAA,CACEH,eAAA,OAAKC,UAAU,gBAAeE,SAAA,CAC5BC,cAACb,EAAM,CACLE,SAAS,MACTC,YAAY,OACZC,MAAOyB,EACPxB,SAAUyB,IAEZjB,cAACb,EAAM,CACLE,SAAS,MACTC,YAAY,MACZC,MAAO2B,EACP1B,SAAU2B,IAEZnB,cAACb,EAAM,CACLE,SAAS,aACTC,YAAY,KACZC,MAAO6B,EACP5B,SAAU6B,OAGdrB,cAAA,OAAKH,UAAU,OAAME,SACnBC,cAAA,UACEsB,OAAQA,EACRO,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,aAGV,EC1CQC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EAAY,GAExB,ECHFS,IAASC,OACP7C,cAAC8C,IAAMC,WAAU,CAAAhD,SACfC,cAACe,EAAG,MAENiC,SAASC,eAAe,SAM1Bf,G","file":"static/js/main.90421874.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\nimport { Launch, TransitEnterexitSharp } from \"@material-ui/icons\";\n\nconst Editor = (props) => {\n  const { language, displayName, value, onChange } = props;\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n\n  return (\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n          className=\"expand-collapse-btn\"\n        >\n          {open ? <TransitEnterexitSharp /> : <Launch />}\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: \"material\",\n          lineNumbers: true,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Editor;\n","import React, { useEffect, useState } from \"react\";\nimport Editor from \"./components/Editor\";\n\nconst App = () => {\n  const [html, setHtml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n  const [js, setJs] = useState(\"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n  <html>\n  <body>${html}</body>\n  <style>${css}</style>\n  <script>${js}</script>\n  </html>`);\n    }, 250);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [html, css, js]);\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameborder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}